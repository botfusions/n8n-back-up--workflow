{
  "active": false,
  "connections": {
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Prompt Writer Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Image": {
      "main": [
        [
          {
            "node": "Prompt Writer Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GPT": {
      "ai_languageModel": [
        [
          {
            "node": "Prompt Writer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output": {
      "ai_outputParser": [
        [
          {
            "node": "Prompt Writer Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Create Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Video Files": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute": {
      "main": [
        [
          {
            "node": "Brief",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Image": {
      "main": [
        [
          {
            "node": "Wait 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image": {
      "main": [
        [
          {
            "node": "If 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Video": {
      "main": [
        [
          {
            "node": "Wait 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Video": {
      "main": [
        [
          {
            "node": "If 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2": {
      "main": [
        [
          {
            "node": "Get Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If 2": {
      "main": [
        [
          {
            "node": "Get Video Files",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 1": {
      "main": [
        [
          {
            "node": "Get Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If 1": {
      "main": [
        [
          {
            "node": "Create Video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Brief": {
      "main": [
        [
          {
            "node": "Analyze Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Upload Video to Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Video to Drive": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Writer Agent": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-20T10:51:47.142Z",
  "id": "B8YFXDIZo3Iqh6DF",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "UGC VİDEO",
  "nodes": [
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        480,
        -80
      ],
      "id": "1b5dee1a-350c-4d12-8474-7ba2955be065",
      "name": "Think"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "text": "=Return the analysis in YAML format with the following fields:\n\nbrand_name: (Name of the brand shown in the image, if visible or inferable)\ncolor_scheme:\n  - hex: (Hex code of each prominent color used)\n    name: (Descriptive name of the color)\nfont_style: (Describe the font family or style used: serif/sans-serif, bold/thin, etc.)\nvisual_description: (A full sentence or two summarizing what is seen in the image, ignoring the background)\n\nOnly return the YAML. Do not explain or add any other comments.\n",
        "imageUrls": "=https://drive.google.com/uc?export=download&id={{ $('Brief').item.json['gdrive link reference image'].match(/https:\\/\\/drive\\.google\\.com\\/file\\/d\\/([A-Za-z0-9_-]+)/)?.[1] }}",
        "simplify": false,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        272,
        416
      ],
      "id": "d4b267a0-6ef5-4810-b6f5-0e97bc3fa871",
      "name": "Analyze Image",
      "credentials": {
        "openAiApi": {
          "id": "GpuIDM5IMbQzdsWf",
          "name": "OpenAi İmage"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        384,
        -80
      ],
      "id": "fb560b3a-bbef-488e-881f-58bb6dac63d4",
      "name": "GPT",
      "credentials": {
        "openAiApi": {
          "id": "GpuIDM5IMbQzdsWf",
          "name": "OpenAi İmage"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"scenes\": [\n    {\n      \"image_prompt\": \"emotion: [string]\\naction: [string]\\ncharacter: [string]\\nsetting: [string]\\ncamera: [string]\\nstyle: [string]\",\n      \"video_prompt\": \"dialogue: [string]\\nemotion: [string]\\nvoice_type: [string]\\naction: [string]\\ncharacter: [string]\\nsetting: [string]\\ncamera: [string]\",\n      \"aspect_ratio_video\": \"[9:16 or 16:9]\",\n      \"aspect_ratio_image\": \"[3:2 or 2:3]\",\n      \"model\": \"[veo3 or veo3_fast]\"\n    }\n  ]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        592,
        -96
      ],
      "id": "33067a80-05d9-4c1e-9b46-c815b20cc0f9",
      "name": "Structured Output"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.scenes",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        832,
        -384
      ],
      "id": "1f9c72fe-c9f6-4e8d-8369-5c5b2271b8fc",
      "name": "Split Out"
    },
    {
      "parameters": {
        "content": "## INPUT: Any Product",
        "height": 112,
        "width": 448,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -64,
        352
      ],
      "id": "c51b2c08-2d23-4c96-93a7-ea457fae35c7",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "url": "={{ $json.data.response.resultUrls[0] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        976,
        416
      ],
      "id": "c728f980-9ed4-4ddb-a384-699ebe524e4c",
      "name": "Get Video Files"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -32,
        416
      ],
      "id": "e85ce044-d272-4dad-b1b8-cbf95ba8af69",
      "name": "Execute"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.kie.ai/api/v1/gpt4o-image/generate",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"filesUrl\": [\n    \"https://drive.google.com/uc?export=download&id={{ $('Brief').item.json['gdrive link reference image'].match(/https:\\/\\/drive\\.google\\.com\\/file\\/d\\/([A-Za-z0-9_-]+)/)?.[1] }}\"\n  ],\n  \"prompt\": \"{{ $json.image_prompt.replace(/\\\"/g, '\\\\\\\\\\\"').replace(/\\n/g, '\\\\\\\\n') }}\",\n  \"size\": \"{{ $json.aspect_ratio_image }}\",\n  \"nVariants\": 1\n}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 3000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        480,
        96
      ],
      "id": "67fdac4f-15ad-485d-a584-d366a5349d98",
      "name": "Create Image",
      "credentials": {
        "httpHeaderAuth": {
          "id": "twHAAwMbp4s6S1rl",
          "name": "Kie.ai"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.kie.ai/api/v1/gpt4o-image/record-info",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "taskId",
              "value": "={{ $('Create Image').item.json.data.taskId }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        480,
        560
      ],
      "id": "417fe864-edda-450e-ba25-dbcd03540539",
      "name": "Get Image",
      "credentials": {
        "httpHeaderAuth": {
          "id": "twHAAwMbp4s6S1rl",
          "name": "Kie.ai"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.kie.ai/api/v1/veo/generate",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"prompt\":\"{{ $('Split Out').item.json.video_prompt\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\"/g, '\\\\\"') }}\",\n  \"model\": \"{{ $('Split Out').item.json.model }}\",\n  \"aspectRatio\": \"{{ $('Split Out').item.json.aspect_ratio_video }}\",\n  \"imageUrls\": \"{{ $('Get Image').item.json.data.response.resultUrls[0] }}\"\n}\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 3000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        704,
        32
      ],
      "id": "a300727a-9c07-4146-ac93-c2c7cb45c7d4",
      "name": "Create Video",
      "credentials": {
        "httpHeaderAuth": {
          "id": "twHAAwMbp4s6S1rl",
          "name": "Kie.ai"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.kie.ai/api/v1/veo/record-info",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "taskId",
              "value": "={{ $('Create Video').item.json.data.taskId }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        720,
        560
      ],
      "id": "f56ff6a3-417b-4a20-9cb5-b689643b748f",
      "name": "Get Video",
      "credentials": {
        "httpHeaderAuth": {
          "id": "twHAAwMbp4s6S1rl",
          "name": "Kie.ai"
        }
      }
    },
    {
      "parameters": {
        "amount": 600
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        720,
        320
      ],
      "id": "fd8a9ae9-bf3a-4aa2-84b1-275fd61fefc0",
      "name": "Wait 2",
      "webhookId": "cf23022b-1ab8-42a0-aa2e-e1ad33b4aeb6"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4c895d90-e8bd-42cf-ab58-511c85e8c782",
              "leftValue": "={{ $json.data.successFlag }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        736,
        784
      ],
      "id": "565d2b4d-190d-4f5d-b512-4f2f800dd48e",
      "name": "If 2"
    },
    {
      "parameters": {
        "amount": 300
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        480,
        320
      ],
      "id": "8bc7ecdd-762f-4723-a77b-c6253ab542e0",
      "name": "Wait 1",
      "webhookId": "6f45a3ee-b783-4f2d-abc3-1bb3d091bf2e"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4c895d90-e8bd-42cf-ab58-511c85e8c782",
              "leftValue": "={{ $json.data.successFlag }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        496,
        752
      ],
      "id": "e767af4c-69d2-4667-af3b-72168339e1e2",
      "name": "If 1"
    },
    {
      "parameters": {
        "fileName": "={{ $json.data.response.taskId }}.mp4",
        "binaryData": true
      },
      "type": "n8n-nodes-base.box",
      "typeVersion": 1,
      "position": [
        1280,
        3568
      ],
      "id": "523248e1-22a5-43ad-b2d5-725588afe5bf",
      "name": "Store Videos"
    },
    {
      "parameters": {
        "content": "## OUTPUT: UGC Video",
        "height": 112,
        "width": 448,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        928,
        352
      ],
      "id": "aff8f100-16e9-4a7d-be41-d212d1264cf2",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e1b058b6-a4e7-4508-9df0-78140dbfcb4b",
              "name": "gdrive link reference image",
              "value": "https://drive.google.com/file/d/1wCLuoJBN4OFTlzaHxsCHAJLv3_dxqUTX/view?usp=sharing",
              "type": "string"
            },
            {
              "id": "334cd55d-056c-4a40-a1cb-bb43a951d314",
              "name": "how many videos",
              "value": "5",
              "type": "string"
            },
            {
              "id": "305ae681-d185-4e31-8b6a-0cac38627547",
              "name": "dialogue",
              "value": "=O 'doğru' sandalyeyi aramayı bırakmıştım ki... Sandaluci'yi buldum. Meğer ahşap sanatı ve gerçek konfor bir araya gelebiliyormuş? Ve biliyor musun, bu his harika!\n",
              "type": "string"
            },
            {
              "id": "a76db358-7fcb-4cb2-a652-e67aa314c7d8",
              "name": "model",
              "value": "veo3_fast",
              "type": "string"
            },
            {
              "id": "ec87685c-1ffb-4d82-8536-3259d2ea6aee",
              "name": "aspect_ratio",
              "value": "vertical",
              "type": "string"
            },
            {
              "id": "e46f416f-7609-455f-8795-72f52ba1e563",
              "name": "any special requests",
              "value": "=For this run - I want normal & casual looking people.\n\nI want the actors in the video to be 21 to 29 years old.\n\nHave diversity in the actors' gender, \n\n***\nAlso I want diversity in the scenes from below:\n\nFine Dining Restaurant - The wooden chair next to a marble table in a chic restaurant. A single spotlight above illuminates the texture of the chair and the table. A dim ambiance and faint outlines of other tables in the background.\n\n\n\nCafé Window - The wooden chair in front of a sunlit café window. The sunlight coming from outside creates shadows on the chair's curved back. There is a cup of latte and a croissant on the small table next to it.\n\n\nHotel Lobby - A waiting corner in a modern and spacious hotel lobby. The wooden chair stands next to a large plant with green leaves. Natural light filtering from the high ceiling creates reflections on the polished floor.\n\n\n\nCocktail Lounge - The wooden chair placed next to a low table in a dim and sophisticated cocktail lounge. Gleaming bottles and art deco style lighting in the background.\n\n\n\nRooftop Terrace - The chair facing the city view on a wooden-floored rooftop terrace at sunset. The warm, orange-toned light emphasizes the wood color of the chair.\n\n\n\n\nArt Gallery - The wooden chair standing like a solitary object in the middle of a minimalist art gallery with white walls. One of the track spotlights on the ceiling is focused directly on the chair, presenting it like a piece of art.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        128,
        416
      ],
      "id": "e432e0e4-6888-4c40-a4b9-93e5a6fccd6e",
      "name": "Brief"
    },
    {
      "parameters": {
        "inputDataFieldName": "=data",
        "name": "Example File",
        "driveId": {
          "__rl": true,
          "value": "My Drive",
          "mode": "list",
          "cachedResultName": "My Drive",
          "cachedResultUrl": "https://drive.google.com/drive/my-drive"
        },
        "folderId": {
          "__rl": true,
          "value": "13AuArzua1xFBNCNmhqFnmUt7_HJ5FhoO",
          "mode": "list",
          "cachedResultName": "gdu video",
          "cachedResultUrl": "https://drive.google.com/drive/folders/13AuArzua1xFBNCNmhqFnmUt7_HJ5FhoO"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1552,
        432
      ],
      "id": "228f6953-991d-4fed-9dbc-c499a2db6846",
      "name": "Upload Video to Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "5wepyKeEKnmkzsyG",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1168,
        416
      ],
      "id": "d9f18ae0-5e80-42e5-9d78-804bb0a7b8f8",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1392,
        432
      ],
      "id": "b00e5b64-268a-4881-be5b-aaa5ca1361dc",
      "name": "Wait",
      "webhookId": "bfa574b9-c21f-471c-a30c-fe5c3a8a7075"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Your task: Create image and video prompts as guided by your system guidelines.\n\nMake sure that the reference image is depicted as ACCURATELY as possible in the resulting images, especially all text.\n\n***\n\nCount of videos to create: {{ $('Brief').item.json['how many videos'] }} \n\n***\nDescription of the reference image:\n {{ $json.choices[0].message.content }}\n\n***\nThe user's preferred aspect ratio:{{ $('Brief').item.json.aspect_ratio }}\n\nThe user's preferred model: {{ $('Brief').item.json.model }}\n\nThe user's preferred dialogue script:\n{{ $('Brief').item.json.dialogue }}\n\nOther special requests from the user:\n{{ $('Brief').item.json['any special requests'] }}\n\n***\nUse the Think tool to double check your output\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=system_prompt: |\n  ## SYSTEM PROMPT: UGC-Style Veo3/Veo3_fast Prompt Generator\n\n  You are a UGC (User-Generated Content) AI agent.  \n  Your task: Take the reference image or the product in the reference image and place it into realistic, casual scenes as if captured by everyday content creators or influencers.  \n\n  All outputs must feel **natural, candid, and unpolished** — avoiding professional or overly staged looks. This means:\n\n    - Everyday realism with authentic, relatable settings\n    - Amateur-quality iPhone photo/video style\n    - Slightly imperfect framing and lighting\n    - Candid poses and genuine expressions\n    - Visible imperfections (blemishes, messy hair, uneven skin)\n    - Real-world environments left as-is (clutter, busy backgrounds)\n\n\nWe need these videos to look natural and real. So in the prompts, have the Camera parameter always use keywords like these: unremarkable amateur iPhone photos, reddit image, snacpchat video, Casual iPhone selfie, slightly uneven framing, Authentic share, slightly blurry, Amateur quality phone photo\n\nIf the dialogue is not provided by the user or you are explicitly asked to create it, generate a casual, conversational line under 200 characters, as if a person were speaking naturally to a friend while talking about the product. Avoid overly formal or sales-like language. The tone should feel authentic, spontaneous, and relatable, matching the UGC style. For example:\nSo TikTok made me buy this... and it turns out it's the best tasting fruit beer in Sydney? And they donate their profits to charity! And you know what it's honestly really good!\n\nFor the dialogue, use ... to indicate pauses, and avoid special characters like em dashes or hyphens\n\nIMPORTANT: Do NOT use double quotes in the image and video prompts\n\n\n\n  A – Ask:\n    Generate  image and video generation instructions for AI image and video generation models based on the user’s request, ensuring exact YAML format for both image and video prompts. Infer aspect ratios from vertical/horizontal context; default to vertical if unspecified.\n\n    **Scene count rule:** Read the user's requested number of video  (an explicit integer) and output **exactly that many** scenes. If the user does not specify a number, default to **1 scene**. Never output more or fewer scenes than requested.\n\n\n\n  G – Guidance:\n    - Always follow UGC-style casual realism principles listed above.\n    - Ensure diversity in gender, ethnicity, and hair color when applicable. Default to actors in 21 to 38 years old unless specified otherwise.\n    - Use provided scene list when available.\n    - Avoid double quotes in the image and video prompts\n\n\n  E – Examples:\n    good_examples:\n      - |\n        {\n          \"scenes\": [\n            {\n              \"image_prompt\": \"action: Character is sitting in the driver's seat, smiling openly while looking at the camera\\ncharacter: Mid-20s blonde female with long straight hair, wearing a plain light-colored t-shirt, natural facial features with minimal makeup\\nsetting: Inside a parked car during daytime, sunlight streaming in from the side window, visible back seats and partial view of the road outside\\ncamera: Casual iPhone selfie, slightly uneven framing, natural lighting with mild overexposure on one side of the face from direct sunlight\\nstyle: Very casual and candid, unposed, authentic expression with friendly and cheerful emotion\",\n              \"video_prompt\": \"dialogue: \\\"So TikTok made me buy this... and it turns out it's the best tasting fruit beer in Sydney? And they donate their profits to charity! And you know what, it's honestly really good!\\\"\\naction: Character sits in the driver's seat of a parked car, holding the beer can close to the camera while speaking the dialogue with a casual, friendly tone\\ncamera: Amateur-quality iPhone video, natural daylight coming through the side window, steady framing from a handheld position\\nemotion: Very happy and energetic, genuine enthusiasm and friendliness while talking about the beer\",\n              \"aspect_ratio_video\": \"9:16\",\n              \"aspect_ratio_image\": \"2:3\",\n              \"model\": \"veo3\"\n            }\n          ]\n        }\n\n  N – Notation:\n    - Final output is a `\"scenes\"` array at the root level.\n    - The array must contain **exactly `scene_count`** objects, where `scene_count` is the user-specified number (or 1 if unspecified).\n    - Each scene contains:\n      - `image_prompt` → stringified YAML with: emotion, action, character, setting, camera, style\n      - `video_prompt` → stringified YAML with: dialogue, emotion, voice_type, action, character, setting, camera\n      - `aspect_ratio_video` → \"9:16\" or \"16:9\" (default vertical → 9:16)\n      - `aspect_ratio_image` → \"3:2\" or \"2:3\" (default vertical → 2:3)\n      - `model` → \"veo3\" or \"veo3_fast\"\n\n  T – Tools:\n    - Think Tool: Double-check output for completeness, diversity, adherence to style, and that the number of scenes exactly matches the requested count.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        384,
        -384
      ],
      "id": "9a6368d7-45a4-4575-9480-7e640e32b73f",
      "name": "Prompt Writer Agent"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-20T10:51:47.142Z",
      "updatedAt": "2025-08-20T10:51:47.142Z",
      "role": "workflow:owner",
      "workflowId": "B8YFXDIZo3Iqh6DF",
      "projectId": "O3f0VXsCOyNYdqZx"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-20T10:52:02.428Z",
      "updatedAt": "2025-08-20T10:52:02.428Z",
      "id": "z3Z9Nzn53zDuNV96",
      "name": "İmage"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-08-20T13:59:35.053Z",
  "versionId": "3d7db797-0c7c-46e9-a83c-4524d4d0acfd"
}