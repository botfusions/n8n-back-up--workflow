{
  "active": false,
  "connections": {
    "Run Actor Synchronously": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Search for Entries",
            "type": "main",
            "index": 0
          },
          {
            "node": "Drop Duplicates",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Search for Entries": {
      "main": [
        [
          {
            "node": "Drop Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Drop Duplicates": {
      "main": [
        [
          {
            "node": "Add Entries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Entries": {
      "main": [
        [
          {
            "node": "Download Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Video": {
      "main": [
        [
          {
            "node": "Transcribe Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Video": {
      "main": [
        [
          {
            "node": "Filter & Generate Suggestions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter & Generate Suggestions": {
      "main": [
        [
          {
            "node": "Search Perplexity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Perplexity": {
      "main": [
        [
          {
            "node": "Write New Script",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write New Script": {
      "main": [
        [
          {
            "node": "Update Entries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Run Actor Synchronously",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-15T13:05:19.226Z",
  "id": "Y2aGyMXeA8jVGbc9",
  "isArchived": false,
  "meta": null,
  "name": "instegram kazıyıcı",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/xMc5Ga1oCONPmWJIa/run-sync-get-dataset-items",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer  apify_api_kYcHTfPLxIYYIoFa5J4fmQPKboagND1ovqS4"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"resultsLimit\": 5,\n  \"username\": [\n    \"harigariga\",\n    \"thonetfurniture\",\n    \"nonaistanbul\",\n    \"rudahome\",\n    \"lunicabahce\",\n    \"letasandalye\"\n  ]\n}\n\n",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        272,
        80
      ],
      "id": "a110ab94-c447-4e21-b4b3-6318cdb791cf",
      "name": "Run Actor Synchronously"
    },
    {
      "parameters": {
        "maxItems": 2,
        "keep": "lastItems"
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        400,
        320
      ],
      "id": "99c7f0bc-0eb0-43c5-935a-25ca34c45c25",
      "name": "Limit"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "You are a helpful, intelligent admin assistant.",
              "role": "system"
            },
            {
              "content": "I run an AI & automation Instagram channel. I'm looking through news archives to find mentions of tools that I can repurpose into content for my channel.\n\nYour task is to take as input a transcript of a news archive, and then determine if the transcription is about a tool, a technology, or AI.\n\nIf so, you'll identify the tools, then write a list of step-by-step instructions to use the tool easily (ideally for free or for low cost), and one suggestion on exactly how to make this content more palatable to an AI automation audience.\n\nReturn your output in JSON using this format:\n\n{\n  \"verdict\":\"true or false\",\n  \"tools\":[\"list\",\"of\",\"tools\",\"or\",\"resources\"],\n  \"stepByStep\":\"Detailed instructions on how to use the tool(s).\",\n  \"suggestion\":\"Comprehensive, in-depth suggestions on how to make this content more interesting and palatable to my audience (AI automation).\",\n  \"searchPrompt\":\"A short search prompt we'll use to look up the service. Write it like '{toolName}, the {typeOfTool}'\"\n}\n\nIf verdict is \"false\", leave the rest of the fields empty."
            },
            {
              "content": "={{ JSON.stringify({ transcript: $json.text }) }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        1408,
        368
      ],
      "id": "e9dc655d-aa27-40f6-9b47-bda4d91f0c7d",
      "name": "Filter & Generate Suggestions"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1IuQ5_0tCgJRNL_f37C0t7x4dwVRbi379M1bwbdv382M",
          "mode": "list",
          "cachedResultName": "instegram kazıma",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IuQ5_0tCgJRNL_f37C0t7x4dwVRbi379M1bwbdv382M/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sayfa1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IuQ5_0tCgJRNL_f37C0t7x4dwVRbi379M1bwbdv382M/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "id",
              "lookupValue": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        544,
        80
      ],
      "id": "1d3c57b8-6322-405d-ac44-0bb1d0d1a177",
      "name": "Search for Entries",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "id",
        "joinMode": "keepNonMatches",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        704,
        320
      ],
      "id": "25df42d3-3c11-4308-b3ad-29346b76c07c",
      "name": "Drop Duplicates"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1IuQ5_0tCgJRNL_f37C0t7x4dwVRbi379M1bwbdv382M",
          "mode": "list",
          "cachedResultName": "instegram kazıma",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IuQ5_0tCgJRNL_f37C0t7x4dwVRbi379M1bwbdv382M/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sayfa1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IuQ5_0tCgJRNL_f37C0t7x4dwVRbi379M1bwbdv382M/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.id }}",
            "timestamp": "={{ $json.timestamp }}",
            "caption": "={{ $json.caption }}",
            "hashtags": "={{ $json.hashtags }}",
            "url": "={{ $json.url }}",
            "username": "={{ $json.ownerUsername }}",
            "shortcode": "={{ $json.shortCode }}",
            "commentscount": "={{ $json.commentsCount }}",
            "firstcomment": "={{ $json.firstComment }}",
            "displayurl": "={{ $json.displayUrl }}",
            "likescount": "={{ $json.likesCount }}",
            "videourl": "={{ $json.videoUrl }}",
            "videowiewcount": "={{ $json.videoViewCount }}",
            "videoplaycount": "={{ $json.videoPlayCount }}",
            "videoduration": "={{ $json.videoDuration }}"
          },
          "matchingColumns": [
            "id"
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        912,
        112
      ],
      "id": "a25e553d-575e-4a5a-944a-2dc1f5dc1939",
      "name": "Add Entries"
    },
    {
      "parameters": {
        "url": "={{ $json.videourl }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1088,
        352
      ],
      "id": "ab4707e5-c112-4bc5-b2cd-96f8bb4ff616",
      "name": "Download Video"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        1280,
        144
      ],
      "id": "dd79dffe-ffa0-4fca-bd48-ad4145eadb39",
      "name": "Transcribe Video"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.perplexity.ai/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer 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"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"model\": \"sonar-pro\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"Be precise and concise.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Tell me three interesting (peculiar) things about {{ $json.message.content.searchPrompt }}\"\n    }\n  ]\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1712,
        112
      ],
      "id": "151b32c5-5db3-43ab-ae38-e6d5b322acf7",
      "name": "Search Perplexity"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "You are a helpful, intelligent writing assistant.",
              "role": "system"
            },
            {
              "content": "I run an AI & automation Instagram channel.\n\nMy editors would like to make a new video. They've found an interesting tool or technology, compiled a step-by-step guide on how to use it, done some searching on the Internet to find some interesting things about it, wrote a rough draft about it, and we also had our chief editor write concrete suggestions for how to make the content better.\n\nYour task is to take as input all of these things, and then write a new, high quality script for us to feature.\n\nReturn your output in JSON using this format:\n\n{\n  \"script\":\"Your script goes here (~100 words).\n}\n\nRules:\n- Use a casual, spartan tone of voice. No frills. Be straightforward, and don't use poetic language.\n- End the script with a call to action like \"Want {thing}? Just comment {keyword} and I'll send it straight to your DMs\",\n- Add newlines as \\n between sentences."
            },
            {
              "content": "{\n  \"toolNames\":\"Speechma\",\n  \"roughDraftScript\":\"Hey there. So, I just wanted to let you know about a AI text-to-speech generator that has recently become available. It’s doesn’t cost anything at all.\\n\\nIt has a lot of voices! And the best part is you don’t need to sign up for an account in order to use it.\\n\\nThe process is really simple, too. You just go the site and type whatever you want converted into speech. There are lots of voices as well.\\n\\nIf this sounds interesting to you, I’d highly recommend giving it a try for yourself. Just leave a comment saying \\\"texttospeech,\\\" and I’ll make sure to send you the link so you can check it out firsthand.\",\n  \"perplexityOutput\": \"Here are three interesting things about Speechma, the AI text-to-speech tool:\\n\\n1. Speechma offers over 400 premium AI voices for text-to-speech conversion, allowing users to find the perfect voice for any project[1].\\n\\n2. The platform provides unlimited free usage with no restrictions on the number of conversions, which is unusual for a premium text-to-speech service[1].\\n\\n3. Speechma grants users commercial rights to use the generated audio for any purpose, including YouTube videos, TikTok content, and business presentations[1].\",\n  \"stepByStepGuide\":\"1. Visit the Speechma website.\\n2. Enter or paste your text into the provided text box.\\n3. Browse through the available 400+ voices and select one that fits your needs.\\n4. Choose the desired language from the 60 supported options.\\n5. Click the 'Generate' button to create your AI-generated speech.\\n6. Download or use your AI-generated speech as needed for projects like YouTube videos or TikToks.\",\n  \"suggestionsForImprovement\":\"Create a short tutorial video showing how to use Speechma, emphasizing its free nature and ease of use. Highlight its unlimited features and vast voice selection. Consider doing a voice comparison test using Speechma versus other popular tools. Discuss potential use cases such as content creation for social media, especially focusing on platforms like Instagram and TikTok, highlighting the benefit of rapid content creation using AI automation.\"\n}"
            },
            {
              "content": "{\n  \"script\":\"Hey—there’s a completely new AI text to speech generator that’s just as good as ElevenLabs, but FREE.\\nIt allows you to choose from over 400 voices, it supports 60 languages, and it’s all completely unlimited with no signup required.\\nJust head over to this website\\nPaste your text\\nChoose one of the voices\\nAnd click generate\\nThat’s it! Your AI speech is now ready to use.\\nYou can use this voice for YouTube videos, TikToks, or whatever you like.\\nSo go try it yourself.\\nJust Comment \\\"speech\\\" and I’ll share the link with you.\"\n}",
              "role": "assistant"
            },
            {
              "content": "={{ JSON.stringify({ toolNames: $('Filter & Generate Suggestions').item.json.message.content.tools.join(), roughDraftScript: $('Transcribe Video').all().first().json.text, perplexityOutput: $json.choices[0].message.content, stepByStepGuide: $('Filter & Generate Suggestions').item.json.message.content.stepByStep, suggestionsForImprovement: $('Filter & Generate Suggestions').item.json.message.content.suggestion }) }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {
          "temperature": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        1904,
        368
      ],
      "id": "eef98da8-5916-4ace-b44f-3f2aba02ded4",
      "name": "Write New Script"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1IuQ5_0tCgJRNL_f37C0t7x4dwVRbi379M1bwbdv382M",
          "mode": "list",
          "cachedResultName": "instegram kazıma",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IuQ5_0tCgJRNL_f37C0t7x4dwVRbi379M1bwbdv382M/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sayfa1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IuQ5_0tCgJRNL_f37C0t7x4dwVRbi379M1bwbdv382M/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Add Entries').item.json.id }}",
            "shortcode": "={{ $('Add Entries').item.json.shortcode }}",
            "commentscount": "={{ $('Add Entries').item.json.commentscount }}",
            "displayurl": "={{ $('Add Entries').item.json.displayurl }}",
            "firstcomment": "={{ $('Add Entries').item.json.firstcomment }}",
            "videourl": "={{ $('Download Video').item.json.videourl }}",
            "likescount": "={{ $('Drop Duplicates').item.json.likesCount }}",
            "videowiewcount": "={{ $('Drop Duplicates').item.json.videoViewCount }}",
            "videoplaycount": "={{ $('Drop Duplicates').item.json.videoPlayCount }}",
            "videoduration": "={{ $('Drop Duplicates').item.json.videoDuration }}",
            "newtranscript": "={{ $json.message.content.script }}",
            "scrapedtranscript": "={{ $('Download Video').item.json.caption }}",
            "message": "={{ $json.message }}",
            "index": "={{ $json.index }}",
            "logprobs": "={{ $json.logprobs }}",
            "finish_reason": "={{ $json.finish_reason }}"
          },
          "matchingColumns": [
            "id"
          ]
        },
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2208,
        128
      ],
      "id": "97acf88d-ba7c-4954-bb07-c3c5820c5b75",
      "name": "Update Entries"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        64,
        240
      ],
      "id": "55d67d1d-53b8-4837-89e9-80f8ca4170d6",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "content": "## Instagram Research System",
        "height": 620,
        "width": 2440,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "b86208b9-d372-43fe-916a-14a0df9adfbf",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-07-15T13:05:19.226Z",
      "updatedAt": "2025-07-15T13:05:19.226Z",
      "role": "workflow:owner",
      "workflowId": "Y2aGyMXeA8jVGbc9",
      "projectId": "O3f0VXsCOyNYdqZx"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-07-15T13:05:04.201Z",
      "updatedAt": "2025-07-15T13:05:04.201Z",
      "id": "tTlZh8Qgj7r2ZrQp",
      "name": "N8N Course"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-07-15T13:05:19.226Z",
  "versionId": "853fa38e-271e-4924-b8a2-1a2d8dad240c"
}