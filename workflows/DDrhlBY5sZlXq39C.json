{
  "active": false,
  "connections": {
    "Slot_Al_Araci": {
      "main": [
        [
          {
            "node": "Giris Parametreleri",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Giris Parametreleri": {
      "main": [
        [
          {
            "node": "Musaitlik Kontrol Et",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Musaitlik Kontrol Et": {
      "main": [
        [
          {
            "node": "Zaman Musait mi Kontrol Et",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zaman Musait mi Kontrol Et": {
      "main": [
        [
          {
            "node": "Zaman Musait true ve Call_id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Tum Takvim Etkinliklerini Al",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zaman Musait true ve Call_id": {
      "main": [
        [
          {
            "node": "Yanit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tum Takvim Etkinliklerini Al": {
      "main": [
        [
          {
            "node": "Baslangic Bitis ve Isim Cikar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Baslangic Bitis ve Isim Cikar": {
      "main": [
        [
          {
            "node": "Sirala",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sirala": {
      "main": [
        [
          {
            "node": "Yanit Formatla",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Yanit Formatla": {
      "main": [
        [
          {
            "node": "Musait Baslangic Saatleri ve Araliklari",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Musait Baslangic Saatleri ve Araliklari": {
      "main": [
        [
          {
            "node": "Yanit Payload Olustur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Yanit Payload Olustur": {
      "main": [
        [
          {
            "node": "JSON Formatini Vapi icin Donustur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON Formatini Vapi icin Donustur": {
      "main": [
        [
          {
            "node": "Vapiye Yanit Ver",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Randevu_Al_Araci": {
      "main": [
        [
          {
            "node": "Randevu Al Parametreleri",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Randevu Al Parametreleri": {
      "main": [
        [
          {
            "node": "Randevu Oluştur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Randevu Oluştur": {
      "main": [
        [
          {
            "node": "Randevu Al Yanıt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Randevu_Guncelle_Araci": {
      "main": [
        [
          {
            "node": "Randevu Güncelle Parametreleri",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Randevu Güncelle Parametreleri": {
      "main": [
        [
          {
            "node": "Randevu Güncelle İşlemi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Randevu Güncelle İşlemi": {
      "main": [
        [
          {
            "node": "Randevu Güncelle Yanıt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Randevu_Iptal_Araci": {
      "main": [
        [
          {
            "node": "Randevu İptal Parametreleri",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Randevu İptal Parametreleri": {
      "main": [
        [
          {
            "node": "Randevu İptal İşlemi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Randevu İptal İşlemi": {
      "main": [
        [
          {
            "node": "Randevu İptal Yanıt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Arama_Sonuclari": {
      "main": [
        [
          {
            "node": "Arama Parametreleri",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Arama İşlemi": {
      "main": [
        [
          {
            "node": "Arama Sonuçlarını Formatla",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Arama Sonuçlarını Formatla": {
      "main": [
        [
          {
            "node": "Arama Yanıt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-02T18:04:46.334Z",
  "id": "DDrhlBY5sZlXq39C",
  "isArchived": false,
  "meta": null,
  "name": "VAPI Extara v3",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ccabe9f4-7911-4488-a75b-7c5779fb2014",
              "name": "timeZone",
              "type": "string",
              "value": "=Europe/Istanbul"
            },
            {
              "id": "b802d976-78f5-4c00-8764-f8c49eaded29",
              "name": "endtime",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].function.arguments.endtime }}"
            },
            {
              "id": "02d58122-6a0f-4bdb-9914-6f50d2af6df4",
              "name": "starttime",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].function.arguments.starttime }}"
            },
            {
              "id": "c1249493-a1d7-4a91-9468-9e5c49430d2e",
              "name": "body.message.toolCalls[0].id",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].id }}"
            },
            {
              "id": "2d1e0d9a-4c70-488e-b430-b8137fd54970",
              "name": "customer.number",
              "type": "string",
              "value": "={{ $json.body.message.call.customer.number }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b8b2f03e-7900-4dff-8e6d-b3fab9cd83bc",
      "name": "Giris Parametreleri",
      "type": "n8n-nodes-base.set",
      "position": [
        1360,
        624
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "concatenateItems",
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "response",
        "include": "allFieldsExcept",
        "fieldsToExclude": "sort",
        "options": {}
      },
      "id": "66a43c26-9efb-4801-9602-538c60badbbf",
      "name": "Yanit Formatla",
      "type": "n8n-nodes-base.itemLists",
      "position": [
        2848,
        720
      ],
      "typeVersion": 3.1
    },
    {
      "parameters": {
        "operation": "sort",
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "sort"
            }
          ]
        },
        "options": {}
      },
      "id": "9ae47b13-0756-43c1-b777-2daa821afb8c",
      "name": "Sirala",
      "type": "n8n-nodes-base.itemLists",
      "position": [
        2608,
        720
      ],
      "typeVersion": 3.1
    },
    {
      "parameters": {
        "jsCode": "// Girdi verisi\nconst inputData = $input.all()[0].json.response;\n\n// Türkiye saati için çalışma saatleri tanımla\nconst CALISMA_BASLANGIC = \"09:00:00 +03\";\nconst CALISMA_BITIS = \"18:00:00 +03\";\nconst SLOT_SURESI = 30 * 60 * 1000; // 30 dakika milisaniye cinsinden\n\n// Türkiye saati datetime stringlerini parse etmek için yardımcı fonksiyon\nconst parseTurkeyTime = (datetime) => {\n  const parsedDate = new Date(datetime.replace(\" +03\", \"+03:00\"));\n  return isNaN(parsedDate) ? null : parsedDate;\n};\n\n// 30 dakikalık başlangıç zamanları oluştur\nconst generateStartTimes = (start, end) => {\n  const startTimes = [];\n  let current = new Date(start);\n\n  while (current < end) {\n    startTimes.push(\n      current.toLocaleTimeString('tr-TR', {\n        timeZone: 'Europe/Istanbul',\n        hour: '2-digit',\n        minute: '2-digit',\n      })\n    );\n    current = new Date(current.getTime() + SLOT_SURESI);\n  }\n\n  return startTimes;\n};\n\n// Geniş açık aralıkları bul\nconst findWideOpenRanges = (startTimes) => {\n  if (startTimes.length < 3) return []; // Geniş aralık için yeterli slot yok\n\n  const ranges = [];\n  let rangeStart = null;\n  let consecutiveCount = 0;\n\n  for (let i = 0; i < startTimes.length - 1; i++) {\n    const currentTime = parseTurkeyTime(`2000-01-01 ${startTimes[i]} +03`);\n    const nextTime = parseTurkeyTime(`2000-01-01 ${startTimes[i + 1]} +03`);\n    const diff = nextTime - currentTime;\n\n    if (diff === SLOT_SURESI) {\n      consecutiveCount += 1;\n      if (rangeStart === null) rangeStart = startTimes[i];\n    } else {\n      if (consecutiveCount >= 2) {\n        ranges.push(`${rangeStart} - ${startTimes[i]} arası`);\n      }\n      rangeStart = null;\n      consecutiveCount = 0;\n    }\n  }\n\n  // Son aralığı işle\n  if (consecutiveCount >= 2) {\n    ranges.push(`${rangeStart} - ${startTimes[startTimes.length - 1]} arası`);\n  }\n\n  return ranges;\n};\n\n// Toplantıları tarihe göre grupla, geçersiz tarihleri yoksay\nconst meetingsByDate = inputData.reduce((acc, meeting) => {\n  const start = parseTurkeyTime(meeting.start);\n  const end = parseTurkeyTime(meeting.end);\n\n  if (!start || !end) {\n    return acc; // Geçersiz tarihleri yoksay\n  }\n\n  const dateKey = start.toISOString().split('T')[0];\n\n  if (!acc[dateKey]) {\n    acc[dateKey] = [];\n  }\n\n  acc[dateKey].push({ start, end });\n  return acc;\n}, {});\n\n// Müsaitlik oluştur\nconst availability = Object.keys(meetingsByDate)\n  .filter((date) => {\n    // Cumartesi (6) ve Pazar (0) günlerini hariç tut\n    const dayOfWeek = new Date(date).getUTCDay();\n    return dayOfWeek !== 0 && dayOfWeek !== 6;\n  })\n  .map((date) => {\n    const workdayStart = parseTurkeyTime(`${date} ${CALISMA_BASLANGIC}`);\n    const workdayEnd = parseTurkeyTime(`${date} ${CALISMA_BITIS}`);\n\n    const dayMeetings = meetingsByDate[date].sort((a, b) => a.start - b.start);\n\n    let availableStartTimes = [];\n    let lastEnd = workdayStart;\n\n    for (const meeting of dayMeetings) {\n      if (meeting.start > lastEnd) {\n        availableStartTimes = availableStartTimes.concat(generateStartTimes(lastEnd, meeting.start));\n      }\n      lastEnd = meeting.end > lastEnd ? meeting.end : lastEnd;\n    }\n\n    if (lastEnd < workdayEnd) {\n      availableStartTimes = availableStartTimes.concat(generateStartTimes(lastEnd, workdayEnd));\n    }\n\n    const wideOpenRanges = findWideOpenRanges(availableStartTimes);\n\n    return {\n      date: new Date(date).toLocaleDateString('tr-TR', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      }),\n      availableStartTimes,\n      wideOpenRanges,\n    };\n  });\n\n// Çıktıyı düz metin olarak formatla\nconst availableTimes = availability\n  .map(({ date, availableStartTimes, wideOpenRanges }) => {\n    const times = availableStartTimes.map((time) => `- ${time}`).join('\\n');\n    const ranges = wideOpenRanges.length\n      ? `Geniş Açık Aralıklar:\\n${wideOpenRanges.map((range) => `- ${range}`).join('\\n')}`\n      : \"Geniş Açık Aralıklar: Yok\";\n\n    return `### ${date}\\nMüsait Başlangıç Saatleri:\\n${times}\\n\\n${ranges}`;\n  })\n  .join('\\n\\n');\n\n// Çıktıyı ayarla\nreturn {\n  json: {\n    availableTimes,\n  },\n};\n"
      },
      "id": "83190955-8ad2-401e-a425-068f09057301",
      "name": "Musait Baslangic Saatleri ve Araliklari",
      "type": "n8n-nodes-base.code",
      "position": [
        3088,
        720
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5cb05b10-e916-459e-84a2-9c314a859a07",
              "name": "results[0].toolCallId",
              "type": "string",
              "value": "={{ $('Giris Parametreleri').item.json['body.message.toolCalls[0].id'] }}"
            },
            {
              "id": "552246f9-7afd-404e-9fb3-cb38c7447359",
              "name": "results[0].result",
              "type": "string",
              "value": "={{ $json.availableTimes }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2fd06eb2-e612-4b9f-a35a-0a7875857fcd",
      "name": "Yanit Payload Olustur",
      "type": "n8n-nodes-base.set",
      "position": [
        3744,
        720
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "slotlari-al",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "ca0218b7-92da-4358-8c2c-e090293e9363",
      "name": "Slot_Al_Araci",
      "type": "n8n-nodes-base.webhook",
      "position": [
        1104,
        624
      ],
      "typeVersion": 2.1,
      "webhookId": "434e1095-3b44-4e81-a3e5-e342f546ee5d"
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "cenk.tokgoz@gmail.com",
          "mode": "list",
          "cachedResultName": "cenk.tokgoz@gmail.com"
        },
        "timeMin": "={{ $json.starttime.toDateTime() }}",
        "timeMax": "={{ $json.endtime.toDateTime() || $now.plus(1, 'hour').toISO() }}",
        "options": {}
      },
      "id": "3f21edb9-a1c6-427f-b580-55afb8595e38",
      "name": "Musaitlik Kontrol Et",
      "type": "n8n-nodes-base.googleCalendar",
      "position": [
        1648,
        624
      ],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "BCRaE2mwLyFVklvl",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n    \"results\":[\n        {\n            \"toolCallId\":\"{{ $('Slot_Al_Araci').first().json.body.message.toolCalls[0].id }}\",\n            \"result\":\"musait:{{ $json.available }}\"\n        }\n    ]\n}",
        "options": {}
      },
      "id": "5b62118e-1208-4ecb-bc6c-5bea949fda45",
      "name": "Yanit",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        2384,
        528
      ],
      "typeVersion": 1.5
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "4a8741a2-a903-4fb7-b0a3-5c74c7eea6ca",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.available }}",
              "rightValue": "="
            }
          ]
        },
        "options": {}
      },
      "id": "30e49de6-9555-4dda-8975-8c567c6f1319",
      "name": "Zaman Musait mi Kontrol Et",
      "type": "n8n-nodes-base.if",
      "position": [
        1904,
        624
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f582d965-af15-4ecf-8a8c-d8bf6c0d15c1",
              "name": "body.message.toolCalls[0].id",
              "type": "string",
              "value": "={{ $('Giris Parametreleri').item.json['body.message.toolCalls[0].id'] }}"
            },
            {
              "id": "834ee925-5c8d-4e46-aeee-f399dc1ff40c",
              "name": "available",
              "type": "boolean",
              "value": "={{ $json.available }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9d8363b8-9a34-48a2-abf2-f2519527ee64",
      "name": "Zaman Musait true ve Call_id",
      "type": "n8n-nodes-base.set",
      "position": [
        2160,
        528
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "cenk.tokgoz@gmail.com",
          "mode": "list",
          "cachedResultName": "cenk.tokgoz@gmail.com"
        },
        "returnAll": true,
        "options": {
          "orderBy": "startTime"
        }
      },
      "id": "6756d00d-c01e-495a-8c35-a7dc486c7d02",
      "name": "Tum Takvim Etkinliklerini Al",
      "type": "n8n-nodes-base.googleCalendar",
      "position": [
        2160,
        720
      ],
      "typeVersion": 1.3,
      "alwaysOutputData": true,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "BCRaE2mwLyFVklvl",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1045b97f-c76f-450e-8f57-008602000848",
              "name": "start",
              "type": "string",
              "value": "={{ DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.DATE_HUGE) + ', ' + DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}"
            },
            {
              "id": "457e3a2b-d33e-4a65-b2da-d19ad9d754ac",
              "name": "end",
              "type": "string",
              "value": "={{ DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.DATE_HUGE) + ', ' + DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}"
            },
            {
              "id": "b6802452-557e-4568-af14-4574e8ecc013",
              "name": "name",
              "type": "string",
              "value": "={{ $json.summary }}"
            },
            {
              "id": "799b656f-68b6-467c-88a1-217ff7c7801b",
              "name": "sort",
              "type": "string",
              "value": "={{ $json.start.dateTime }}"
            }
          ]
        },
        "options": {
          "ignoreConversionErrors": true
        }
      },
      "id": "b62c2a5e-c363-4fb6-be98-34f228b05b4e",
      "name": "Baslangic Bitis ve Isim Cikar",
      "type": "n8n-nodes-base.set",
      "position": [
        2384,
        720
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "jsCode": "// Input datanın ilk öğesini al\nconst inputData = $input.first().json;\nconsole.log(\"Input Data:\", inputData);\n\n// Mesaj stringini doğru yoldan eriş\nlet message = inputData.results?.[0]?.result;\n\n// Mesajın bulunup bulunmadığını ve string olup olmadığını kontrol et\nif (typeof message !== 'string') {\n    console.error(\"Mesaj string bulunamadı\");\n    return { message: \"\" };\n}\n\n// Mesaj stringini temizlemeye başla\n\n// 1. \"\\\\n\" stringini boşlukla değiştir\nlet cleanedMessage = message.replace(/\\\\n/g, ' ');\n\n// 2. İki nokta etrafındaki boşlukları kaldır\ncleanedMessage = cleanedMessage.replace(/\\s*:\\s*/g, ':');\n\n// 3. Çoklu boşluk karakterlerini tek boşlukla değiştir\ncleanedMessage = cleanedMessage.replace(/\\s+/g, ' ').trim();\n\n// Son çıktı JSON objesini oluştur\nconst output = {\n    message: cleanedMessage\n};\n\n// Çıktı objesini döndür\nreturn output;"
      },
      "id": "49e5f3c1-e422-4408-9ef8-bb70ef1c46ad",
      "name": "JSON Formatini Vapi icin Donustur",
      "type": "n8n-nodes-base.code",
      "position": [
        3968,
        720
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n    \"results\":[\n        {\n            \"toolCallId\":\"{{ $('Slot_Al_Araci').first().json.body.message.toolCalls[0].id }}\",\n            \"result\":\"Orijinal saat müsait değil, işte müsait slotlar:{{ $json.message }}\"\n        }\n    ]\n}",
        "options": {}
      },
      "id": "c0816f6c-955e-4680-be7b-9c8f4989e74a",
      "name": "Vapiye Yanit Ver",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        4208,
        720
      ],
      "typeVersion": 1.5
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "randevu-al",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "259d6bd1-724a-4661-ba1c-187a2296b118",
      "name": "Randevu_Al_Araci",
      "type": "n8n-nodes-base.webhook",
      "position": [
        1072,
        1136
      ],
      "typeVersion": 2.1,
      "webhookId": "d5142e19-0fc0-4ad6-bb77-5511135735d6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "randevu-al-param1",
              "name": "starttime",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].function.arguments.starttime }}"
            },
            {
              "id": "randevu-al-param2",
              "name": "endtime",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].function.arguments.endtime }}"
            },
            {
              "id": "randevu-al-param3",
              "name": "title",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].function.arguments.title || 'Randevu' }}"
            },
            {
              "id": "randevu-al-param4",
              "name": "toolCallId",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "randevu-al-params",
      "name": "Randevu Al Parametreleri",
      "type": "n8n-nodes-base.set",
      "position": [
        1344,
        1136
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "example@gmail.com",
          "cachedResultName": "example@gmail.com"
        },
        "start": "={{ $json.starttime }}",
        "end": "={{ $json.endtime }}",
        "additionalFields": {}
      },
      "id": "randevu-olustur",
      "name": "Randevu Oluştur",
      "type": "n8n-nodes-base.googleCalendar",
      "position": [
        1616,
        1136
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n    \"results\":[\n        {\n            \"toolCallId\":\"{{ $('Randevu Al Parametreleri').item.json.toolCallId }}\",\n            \"result\":\"Randevu başarıyla oluşturuldu. ID: {{ $json.id }}\"\n        }\n    ]\n}",
        "options": {}
      },
      "id": "randevu-al-yanit",
      "name": "Randevu Al Yanıt",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        1888,
        1136
      ],
      "typeVersion": 1.5
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "randevu-guncelle",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "randevu-guncelle-webhook",
      "name": "Randevu_Guncelle_Araci",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        1088,
        1456
      ],
      "webhookId": "35164ae1-395c-4376-8692-834c52543085"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "guncelle-param1",
              "name": "eventId",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].function.arguments.eventId }}"
            },
            {
              "id": "guncelle-param2",
              "name": "starttime",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].function.arguments.starttime }}"
            },
            {
              "id": "guncelle-param3",
              "name": "endtime",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].function.arguments.endtime }}"
            },
            {
              "id": "guncelle-param4",
              "name": "title",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].function.arguments.title }}"
            },
            {
              "id": "guncelle-param5",
              "name": "toolCallId",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "randevu-guncelle-params",
      "name": "Randevu Güncelle Parametreleri",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1360,
        1456
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "example@gmail.com",
          "cachedResultName": "example@gmail.com"
        },
        "eventId": "={{ $json.eventId }}",
        "updateFields": {}
      },
      "id": "randevu-guncelle-islemi",
      "name": "Randevu Güncelle İşlemi",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        1632,
        1456
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n    \"results\":[\n        {\n            \"toolCallId\":\"{{ $('Randevu Güncelle Parametreleri').item.json.toolCallId }}\",\n            \"result\":\"Randevu başarıyla güncellendi.\"\n        }\n    ]\n}",
        "options": {}
      },
      "id": "randevu-guncelle-yanit",
      "name": "Randevu Güncelle Yanıt",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.5,
      "position": [
        1904,
        1456
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "randevu-iptal",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "randevu-iptal-webhook",
      "name": "Randevu_Iptal_Araci",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        1104,
        1776
      ],
      "webhookId": "efb2b575-bcd5-44a9-95d2-e070ae6388ce"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "iptal-param1",
              "name": "eventId",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].function.arguments.eventId }}"
            },
            {
              "id": "iptal-param2",
              "name": "toolCallId",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "randevu-iptal-params",
      "name": "Randevu İptal Parametreleri",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1376,
        1776
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "example@gmail.com",
          "cachedResultName": "example@gmail.com"
        },
        "eventId": "={{ $json.eventId }}",
        "options": {}
      },
      "id": "randevu-iptal-islemi",
      "name": "Randevu İptal İşlemi",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        1648,
        1776
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n    \"results\":[\n        {\n            \"toolCallId\":\"{{ $('Randevu İptal Parametreleri').item.json.toolCallId }}\",\n            \"result\":\"Randevu başarıyla iptal edildi.\"\n        }\n    ]\n}",
        "options": {}
      },
      "id": "randevu-iptal-yanit",
      "name": "Randevu İptal Yanıt",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.5,
      "position": [
        1920,
        1776
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "arama-sonuclari",
        "options": {
          "noResponseBody": false
        }
      },
      "id": "arama-webhook",
      "name": "Arama_Sonuclari",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        1056,
        2128
      ],
      "webhookId": "7ffecd47-bfbf-4813-a252-279405bdbe80"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "arama-param1",
              "name": "query",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].function.arguments.query }}"
            },
            {
              "id": "arama-param2",
              "name": "timeMin",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].function.arguments.timeMin || $now.toISO() }}"
            },
            {
              "id": "arama-param3",
              "name": "timeMax",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].function.arguments.timeMax || $now.plus(1, 'month').toISO() }}"
            },
            {
              "id": "arama-param4",
              "name": "toolCallId",
              "type": "string",
              "value": "={{ $json.body.message.toolCalls[0].id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "arama-params",
      "name": "Arama Parametreleri",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1376,
        2128
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "example@gmail.com",
          "cachedResultName": "example@gmail.com"
        },
        "options": {
          "orderBy": "startTime"
        }
      },
      "id": "arama-islemi",
      "name": "Arama İşlemi",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        1648,
        2128
      ]
    },
    {
      "parameters": {
        "jsCode": "// Arama sonuçlarını formatla\nconst events = $input.all();\n\nif (!events || events.length === 0) {\n  return {\n    json: {\n      message: \"Arama kriterlerinize uygun randevu bulunamadı.\"\n    }\n  };\n}\n\nconst formattedEvents = events.map(event => {\n  const data = event.json;\n  return {\n    id: data.id,\n    title: data.summary || 'Başlıksız Randevu',\n    start: DateTime.fromISO(data.start.dateTime).toLocaleString(DateTime.DATETIME_MED),\n    end: DateTime.fromISO(data.end.dateTime).toLocaleString(DateTime.DATETIME_MED),\n    description: data.description || ''\n  };\n});\n\nconst resultText = formattedEvents\n  .map(event => `• ${event.title}\\n  Tarih: ${event.start} - ${event.end}\\n  ID: ${event.id}`)\n  .join('\\n\\n');\n\nreturn {\n  json: {\n    message: `Bulunan randevular (${formattedEvents.length} adet):\\n\\n${resultText}`\n  }\n};"
      },
      "id": "arama-formatla",
      "name": "Arama Sonuçlarını Formatla",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1920,
        2128
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n    \"results\":[\n        {\n            \"toolCallId\":\"{{ $('Arama Parametreleri').item.json.toolCallId }}\",\n            \"result\":\"{{ $json.message }}\"\n        }\n    ]\n}",
        "options": {}
      },
      "id": "arama-yanit",
      "name": "Arama Yanıt",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.5,
      "position": [
        2192,
        2128
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-02T18:04:46.334Z",
      "updatedAt": "2025-08-02T18:04:46.334Z",
      "role": "workflow:owner",
      "workflowId": "DDrhlBY5sZlXq39C",
      "projectId": "O3f0VXsCOyNYdqZx"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-02T19:57:03.851Z",
  "versionId": "14f91b93-d62e-4ecb-a770-0d9220465d79"
}